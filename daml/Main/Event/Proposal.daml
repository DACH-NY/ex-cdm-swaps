-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

daml 1.2
module Main.Event.Proposal where

import Org.Isda.Cdm.EventSpecificationModule (Event)
import Main.Event.Instance
import Main.Types
import Main.Utils.Cdm

-- | A CDM event that has been proposed but not accepted by all parties involved yet
template EventProposal
  with
    d     : Event
      -- ^ The CDM event
    ps    : [PartyWithId]
      -- ^ Parties (including an id to link to party data in d.party) involved in the event
    sigs  : [Party]
      -- Parties that have already signed the proposal
  where
    signatory sigs
    observer map (\sig -> sig.p) ps
    ensure checkParties ps d.party

    -- Accept event
    choice EventProposal_Accept: Either (ContractId EventProposal) (ContractId EventInstance)
      with
        exerciser: Party
      controller exerciser
      do
        assertMsg "exerciser exists" $ any (\p -> p.p == exerciser) ps
        assertMsg ("Party " <> show exerciser <> " has signed already") (not (any ((==) exerciser) sigs))

        if all (\p -> any ((==) p.p) (exerciser :: sigs)) ps
        then do
          cid <- create EventInstance with ps = ps, d = d
          return $ Right cid
        else do
          cid <- create this with sigs = exerciser :: sigs
          return $ Left cid
