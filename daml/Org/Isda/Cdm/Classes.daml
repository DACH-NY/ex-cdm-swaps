daml 1.2

-- | This file is auto-generated from the ISDA Common
--   Domain Model, do not edit.
--   @version 2.0.31
module Org.Isda.Cdm.Classes
  ( module Org.Isda.Cdm.Classes ) where

import Org.Isda.Cdm.Enums
import Org.Isda.Cdm.ZonedDateTime
import Org.Isda.Cdm.MetaClasses
import Prelude hiding (Party, exercise, id, product)

-- | A class to specify an account as an account number
--   alongside, optionally. an account name, an account
--   type, an account beneficiary and a servicing party.
data Account = Account with
  accountBeneficiary : Optional (ReferenceWithMeta Party)
    -- ^ A reference to the party beneficiary of the account.
  accountName : Optional (FieldWithMeta Text)
    -- ^ The name by which the account is known.
  accountNumber : (FieldWithMeta Text)
    -- ^ The account number.
  id : Optional Text
  servicingParty : Optional (ReferenceWithMeta Party)
    -- ^ The reference to the legal entity that services the
    --   account, i.e. in the books of which the account is
    --   held.
    deriving (Eq, Ord, Show)

-- | A class for defining a date that shall be subject to
--   adjustment if it would otherwise fall on a day that
--   is not a business day in the specified business
--   centers, together with the convention for adjusting
--   the date.
data AdjustableDate = AdjustableDate with
  adjustedDate : Optional (FieldWithMeta Date)
    -- ^ The date once the adjustment has been performed.
    --   (Note that this date may change if the business
    --   center holidays change).
  dateAdjustments : Optional BusinessDayAdjustments
    -- ^ The business day convention and financial business
    --   centers used for adjusting the date if it would
    --   otherwise fall on a day that is not a business date
    --   in the specified business centers.
  dateAdjustmentsReference : Optional (ReferenceWithMeta BusinessDayAdjustments)
    -- ^ A pointer style reference to date adjustments defined
    --   elsewhere in the document.
  id : Optional Text
  unadjustedDate : Date
    -- ^ A date subject to adjustment.
    deriving (Eq, Ord, Show)

-- | A class for defining a series of dates that shall be
--   subject to adjustment if they would otherwise fall on
--   a day that is not a business day in the specified
--   business centers, together with the convention for
--   adjusting the dates.
data AdjustableDates = AdjustableDates with
  adjustedDate : [FieldWithMeta Date]
    -- ^ The date(s) once the adjustment has been performed.
    --   (Note that this date may change if the business
    --   center holidays change).
  dateAdjustments : BusinessDayAdjustments
    -- ^ The business day convention and financial business
    --   centers used for adjusting the date if it would
    --   otherwise fall on a day that is not a business date
    --   in the specified business centers.
  id : Optional Text
  unadjustedDate : [Date]
    -- ^ A date subject to adjustment.
    deriving (Eq, Ord, Show)

-- | A class for defining a date that shall be subject to
--   adjustment if it would otherwise fall on a day that
--   is not a business day in the specified business
--   centers, together with the convention for adjusting
--   the date.
data AdjustableOrAdjustedDate = AdjustableOrAdjustedDate with
  adjustedDate : Optional (FieldWithMeta Date)
    -- ^ The date once the adjustment has been performed.
    --   (Note that this date may change if the business
    --   center holidays change).
  dateAdjustments : Optional BusinessDayAdjustments
    -- ^ The business day convention and financial business
    --   centers used for adjusting the date if it would
    --   otherwise fall on a day that is not a business date
    --   in the specified business centers.
  id : Optional Text
  unadjustedDate : Optional Date
    -- ^ A date subject to adjustment.
    deriving (Eq, Ord, Show)

-- | This Rosetta class specifies the date as either an
--   unadjusted, adjusted or relative date. It supplements
--   the features of the AdjustableOrAdjustedDate to
--   support the credit default swap option premium, which
--   uses the relative date construct.
data AdjustableOrAdjustedOrRelativeDate = AdjustableOrAdjustedOrRelativeDate with
  adjustedDate : Optional (FieldWithMeta Date)
    -- ^ The date once the adjustment has been performed.
    --   (Note that this date may change if the business
    --   center holidays change).
  dateAdjustments : Optional BusinessDayAdjustments
    -- ^ The business day convention and financial business
    --   centers used for adjusting the date if it would
    --   otherwise fall on a day that is not a business date
    --   in the specified business centers.
  id : Optional Text
  relativeDate : Optional RelativeDateOffset
    -- ^ A date specified as some offset to another date (the
    --   anchor date).
  unadjustedDate : Optional Date
    -- ^ A date subject to adjustment.
    deriving (Eq, Ord, Show)

-- | A class giving the choice between defining a date as
--   an explicit date together with applicable adjustments
--   or as relative to some other (anchor) date.
data AdjustableOrRelativeDate = AdjustableOrRelativeDate with
  adjustableDate : Optional AdjustableDate
    -- ^ A date that shall be subject to adjustment if it
    --   would otherwise fall on a day that is not a business
    --   day in the specified business centers, together with
    --   the convention for adjusting the date.
  id : Optional Text
  relativeDate : Optional AdjustedRelativeDateOffset
    -- ^ A date specified as some offset to another date (the
    --   anchor date).
    deriving (Eq, Ord, Show)

-- | A class giving the choice between defining a series
--   of dates as an explicit list of dates together with
--   applicable adjustments or as relative to some other
--   series of (anchor) dates.
data AdjustableOrRelativeDates = AdjustableOrRelativeDates with
  adjustableDates : Optional AdjustableDates
    -- ^ A series of dates that shall be subject to adjustment
    --   if they would otherwise fall on a day that is not a
    --   business day in the specified business centers,
    --   together with the convention for adjusting the date.
  id : Optional Text
    deriving (Eq, Ord, Show)

-- | A type defining a date (referred to as the derived
--   date) as a relative offset from another date
--   (referred to as the anchor date) plus optional date
--   adjustments.
data AdjustedRelativeDateOffset = AdjustedRelativeDateOffset with
  adjustedDate : Optional Date
    -- ^ The date once the adjustment has been performed.
    --   (Note that this date may change if the business
    --   center holidays change).
  businessCenters : Optional BusinessCenters
  businessCentersReference : Optional (ReferenceWithMeta BusinessCenters)
    -- ^ A pointer style reference to a set of financial
    --   business centers defined elsewhere in the document.
    --   This set of business centers is used to determine
    --   whether a particular day is a business day or not.
  businessDayConvention : BusinessDayConventionEnum
    -- ^ The convention for adjusting a date if it would
    --   otherwise fall on a day that is not a business day,
    --   as specified by an ISDA convention (e.g. Following,
    --   Precedent).
  dateRelativeTo : Optional (BasicReferenceWithMeta Date)
    -- ^ Specifies the anchor as an href attribute. The href
    --   attribute value is a pointer style reference to the
    --   element or component elsewhere in the document where
    --   the anchor date is defined.
  dayType : Optional DayTypeEnum
    -- ^ In the case of an offset specified as a number of
    --   days, this element defines whether consideration is
    --   given as to whether a day is a good business day or
    --   not. If a day type of business days is specified then
    --   non-business days are ignored when calculating the
    --   offset. The financial business centers to use for
    --   determination of business days are implied by the
    --   context in which this element is used. This element
    --   must only be included when the offset is specified as
    --   a number of days. If the offset is zero days then the
    --   dayType element should not be included.
  id : Optional Text
  period : PeriodEnum
    -- ^ A time period, e.g. a day, week, month or year of the
    --   stream. If the periodMultiplier value is 0 (zero)
    --   then period must contain the value D (day).
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
    --   negative value can be used when specifying an offset
    --   relative to another date, e.g. -2 days.
  relativeDateAdjustments : Optional BusinessDayAdjustments
    -- ^ The business day convention and financial business
    --   centers used for adjusting the relative date if it
    --   would otherwise fall on a day that is not a business
    --   date in the specified business centers.
    deriving (Eq, Ord, Show)

-- | A class to specify the allocated outcome as the
--   combination of an execution which state is specified
--   as &#39;Allocated&#39; and a contract or set of
--   contract(s). (The allocation to one single contract
--   is deemed appropriate.)
data AllocationOutcome = AllocationOutcome with
  contract : [Contract]
  execution : Execution
    deriving (Eq, Ord, Show)

-- | The primitive event to represent a split/allocation
--   of a contractual product or a contract.
data AllocationPrimitive = AllocationPrimitive with
  after : AllocationOutcome
  before : ExecutionState
    deriving (Eq, Ord, Show)

-- | A class to specify the identifier value and its
--   associated version.
data AssignedIdentifier = AssignedIdentifier with
  identifier : (FieldWithMeta Text)
    -- ^ The identifier value.
  version : Optional Int
    -- ^ The identifier version, which is specified as an
    --   integer and is meant to be incremented each time the
    --   transaction terms (whether contract or event) change.
    --   This version is made option to support the use case
    --   where the identifier is referenced without the
    --   version. The constraint that a contract and a
    --   lifecycle event need to have an associated version is
    --   enforced through data rules.
    deriving (Eq, Ord, Show)

-- | A class for specifying the business day calendar
--   location used in determining whether a day is a
--   business day or not, either by specifying this
--   business center by reference to an enumerated list
--   that is maintained by the FpML standard, or by
--   reference to such specification when it exists
--   elsewhere as part of the instance document. This
--   class corresponds to the FpML
--   BusinessCentersOrReference.model.
data BusinessCenters = BusinessCenters with
  businessCenter : [FieldWithMeta BusinessCenterEnum]
    -- ^ A code identifying one or several business day
    --   calendar location(s). The set of business day
    --   calendar locations are specified by the business day
    --   calendar location enumeration which is maintained by
    --   the FpML standard.
  businessCentersReference : Optional (ReferenceWithMeta BusinessCenters)
    -- ^ A reference to a financial business center location
    --   specified elsewhere in the instance document.
  id : Optional Text
    deriving (Eq, Ord, Show)

-- | A class defining the business day convention and
--   financial business centers used for adjusting any
--   relevant date if it would otherwise fall on a day
--   that is not a business day in the specified business
--   center.
data BusinessDayAdjustments = BusinessDayAdjustments with
  businessCenters : Optional BusinessCenters
    -- ^ The business center(s), specified either explicitly
    --   or by reference to those specified somewhere else in
    --   the instance document.
  businessDayConvention : BusinessDayConventionEnum
    -- ^ The convention for adjusting a date if it would
    --   otherwise fall on a day that is not a business day.
  id : Optional Text
    deriving (Eq, Ord, Show)

-- | This class corresponds to the FpML BuyerSeller.model
--   construct.
data BuyerSeller = BuyerSeller with
  buyerAccountReference : Optional (ReferenceWithMeta Account)
    -- ^ A reference to the account that buys this instrument.
  buyerPartyReference : (ReferenceWithMeta Party)
    -- ^ A reference to the party that buys this instrument,
    --   i.e. pays for this instrument and receives the rights
    --   defined by it. ISDA 2002 Equity Definitions section
    --   1.18: `Buyer` means the party specified as such in
    --   the related Confirmation. | ISDA 2006 Definitions
    --   article 12.1 (b)(i) relating to a Swaption:
    --   &#39;Buyer&#39; means the party that will, on each
    --   Premium Payment Date, pay to Seller the Premium |
    --   ISDA 2006 Definitions article 12.1 (b)(ii) relating
    --   to Swap Transactions with applicable Early
    --   Termination: the party specified as such in the
    --   related Confirmation, or the Exercising Party if
    --   neither party is specified | ISDA 2006 Definitions
    --   article 12.1 (b)(iii) relating to any other Option
    --   Transaction: the party specified as such in the
    --   related Confirmation. | ISDA 2014 Credit Definition
    --   article 1.4: `Buyer` means the Fixed Rate Payer.
  sellerAccountReference : Optional (ReferenceWithMeta Account)
    -- ^ A reference to the account that sells this
    --   instrument.
  sellerPartyReference : (ReferenceWithMeta Party)
    -- ^ A reference to the party that sells
    --   (&#39;writes&#39;) this instrument, i.e. that grants
    --   the rights defined by this instrument and in return
    --   receives a payment for it. ISDA 2002 Equity
    --   Definitions section 1.19: `Seller` means the party
    --   specified as such in the related Confirmation. | ISDA
    --   2006 Definitions article 12.1 (a)(i) relating to a
    --   Swaption: &#39;Seller&#39; means the party the party
    --   specified as such or as writer in the related
    --   Confirmation | ISDA 2006 Definitions article 12.1
    --   (a)(ii) relating to Swap Transactions with applicable
    --   Early Termination: the party specified as such or as
    --   writer in the related Confirmation or, if neither
    --   party is specified as such, the Non-exercising Party
    --   | ISDA 2006 Definitions article 12.1 (a)(iii)
    --   relating to any other Option Transaction: the party
    --   specified as such in the related Confirmation. | ISDA
    --   2014 Credit Definition article 1.4: `Seller` means
    --   the Floating Rate Payer.
    deriving (Eq, Ord, Show)

-- | A class defining the parameters used in the
--   calculation of a fixed or floating rate calculation
--   period amount. This class forms part of cashflows
--   representation of a swap stream.
data CalculationPeriod = CalculationPeriod with
  adjustedEndDate : Optional Date
    -- ^ The calculation period end date, adjusted according
    --   to any relevant business day convention.
  adjustedStartDate : Optional Date
    -- ^ The calculation period start date, adjusted according
    --   to any relevant business day convention.
  calculationPeriodNumberOfDays : Optional Int
    -- ^ The number of days from the adjusted effective /
    --   start date to the adjusted termination / end date
    --   calculated in accordance with the applicable day
    --   count fraction.
  dayCountYearFraction : Optional Decimal
    -- ^ The year fraction value of the calculation period,
    --   result of applying the ISDA rules for day count
    --   fraction defined in the ISDA Annex.
  fixedRate : Optional Decimal
    -- ^ The calculation period fixed rate. A per annum rate,
    --   expressed as a decimal. A fixed rate of 5% would be
    --   represented as 0.05.
  floatingRateDefinition : Optional FloatingRateDefinition
    -- ^ The floating rate reset information for the
    --   calculation period.
  forecastAmount : Optional Money
    -- ^ The amount representing the forecast of the accrued
    --   value of the calculation period. An intermediate
    --   value used to generate the forecastPaymentAmount in
    --   the PaymentCalculationPeriod.
  forecastRate : Optional Decimal
    -- ^ A value representing the forecast rate used to
    --   calculate the forecast future value of the accrual
    --   period. This is a calculated rate determined based on
    --   averaging the rates in the rateObservation elements,
    --   and incorporates all of the rate treatment and
    --   averaging rules. A value of 1% should be represented
    --   as 0.01.
  id : Optional Text
  notionalAmount : Optional Decimal
    -- ^ The amount that a cashflow will accrue interest on.
  unadjustedEndDate : Optional Date
    -- ^ The calculation end date, unadjusted.
  unadjustedStartDate : Optional Date
    -- ^ The calculation start date, unadjusted.
    deriving (Eq, Ord, Show)

-- | A class for defining the parameters used to generate
--   the calculation period dates schedule, including the
--   specification of any initial or final stub
--   calculation periods. A calculation period schedule
--   consists of an optional initial stub calculation
--   period, one or more regular calculation periods and
--   an optional final stub calculation period. In the
--   absence of any initial or final stub calculation
--   periods, the regular part of the calculation period
--   schedule is assumed to be between the effective date
--   and the termination date. No implicit stubs are
--   allowed, i.e. stubs must be explicitly specified
--   using an appropriate combination of
--   firstPeriodStartDate, firstRegularPeriodStartDate and
--   lastRegularPeriodEndDate.
data CalculationPeriodDates = CalculationPeriodDates with
  calculationPeriodDatesAdjustments : Optional BusinessDayAdjustments
    -- ^ The specification of the business day convention and
    --   financial business centers used for adjusting any
    --   calculation period date if it would otherwise fall on
    --   a day that is not a business day in the specified
    --   business center.
  calculationPeriodFrequency : Optional CalculationPeriodFrequency
    -- ^ The frequency at which calculation period end dates
    --   occur with the regular part of the calculation period
    --   schedule and their roll date convention.
  effectiveDate : Optional AdjustableOrRelativeDate
    -- ^ The first day of the terms of the trade. This day may
    --   be subject to adjustment in accordance with a
    --   business day convention.
  firstRegularPeriodStartDate : Optional Date
    -- ^ The start date of the regular part of the calculation
    --   period schedule. It must only be specified if there
    --   is an initial stub calculation period. This day may
    --   be subject to adjustment in accordance with any
    --   adjustments specified in
    --   calculationPeriodDatesAdjustments.
  id : Optional Text
  lastRegularPeriodEndDate : Optional Date
    -- ^ The end date of the regular part of the calculation
    --   period schedule. It must only be specified if there
    --   is a final stub calculation period. This day may be
    --   subject to adjustment in accordance with any
    --   adjustments specified in
    --   calculationPeriodDatesAdjustments.
  stubPeriodType : Optional StubPeriodTypeEnum
    -- ^ Method to allocate any irregular period remaining
    --   after regular periods have been allocated between the
    --   effective and termination date.
  terminationDate : Optional AdjustableOrRelativeDate
    -- ^ The last day of the terms of the trade. This date may
    --   be subject to adjustments in accordance with the
    --   business day convention. It can also be specified in
    --   relation to another scheduled date (e.g. the last
    --   payment date).
    deriving (Eq, Ord, Show)

-- | A class to specify the frequency at which calculation
--   period end dates occur within the regular part of the
--   calculation period schedule and their roll date
--   convention.
data CalculationPeriodFrequency = CalculationPeriodFrequency with
  id : Optional Text
  period : PeriodExtendedEnum
    -- ^ A time period, e.g. a day, week, month, year or term
    --   of the stream.
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2, or 3. If the
    --   period value is T (Term) then period multiplier must
    --   contain the value 1.
  rollConvention : RollConventionEnum
    -- ^ The roll convention specifies the period term as part
    --   of a periodic schedule, i.e. the calculation period
    --   end date within the regular part of the calculation
    --   period. The value could be a rule, e.g. IMM
    --   Settlement Dates, which is the 3rd Wednesday of the
    --   month, or it could be a specific day of the month,
    --   such as the first day of the applicable month. It is
    --   used in conjunction with a frequency and the regular
    --   period start date of a calculation period.
    deriving (Eq, Ord, Show)

data CashTransferBreakdown = CashTransferBreakdown with
  amount : Money
    -- ^ The currency amount of the payment.
  cashflowType : Optional CashflowTypeEnum
    -- ^ The qualification of the type of cashflow, when not
    --   inferred from a derived through lineage e.g.
    --   brokerage fee, premium, upfront fee etc.
  identifier : Optional (FieldWithMeta Text)
    -- ^ The identifier that can be associated with each of
    --   the transfer components
  lineage : [Lineage]
    -- ^ The lineage into the transfer components that might
    --   be associated with each of the transfer components.
  payerReceiver : PayerReceiver
    -- ^ The payer and receiver party information.
  transferCalculation : Optional TransferCalculation
    -- ^ The calculation details underlying the transfer
    --   amount, when applicable.
    deriving (Eq, Ord, Show)

data CashTransferComponent = CashTransferComponent with
  amount : Money
    -- ^ The currency amount.
  breakdown : [CashTransferBreakdown]
    -- ^ The cash transfer breakdown, when the transfer
    --   corresponds to a net amount across several components
    --   which breakdown is deemed relevant (e.g. the net cash
    --   transfer related to several contracts, or to the net
    --   proceeds across several payout components).
  cashflowType : Optional CashflowTypeEnum
    -- ^ The qualification of the type of cashflow, when not
    --   inferred from a derived through lineage e.g.
    --   brokerage fee, premium, upfront fee etc.
  identifier : Optional (FieldWithMeta Text)
    -- ^ The identifier that can be associated with each of
    --   the transfer components
  payerReceiver : PayerReceiver
    -- ^ The payer and receiver party information.
  transferCalculation : Optional TransferCalculation
    -- ^ The calculation details underlying the transfer
    --   amount, when applicable.
    deriving (Eq, Ord, Show)

-- | A class to specify a cashflow, i.e. the outcome of
--   either of computation (e.g. interest accrual) or an
--   assessment of some sort (e.g. a fee). The cashflow
--   can then be turned into a cash transfer, artefact to
--   be used as the input to a payment system or the
--   outcome of it. The associated rosettaKey denotes the
--   ability to associate a hash value to the Cashflow
--   instantiations for the purpose of model
--   cross-referencing, in support of functionality such
--   as the event effect and the lineage.
data Cashflow = Cashflow with
  cashflowAmount : Money
    -- ^ The currency amount of the payment.
  cashflowCalculation : Optional Text
    -- ^ This is a conceptual placeholder for providing the
    --   breakdown into the cashflow calculation components,
    --   leveraging the fact that the CDM provides calculation
    --   components, starting with the FixedAmount and the
    --   FloatingAmount. Further evaluation of expected usage
    --   needs to take place to confirm and prioritize such
    --   implementation.
  cashflowDate : Optional AdjustableOrAdjustedOrRelativeDate
  cashflowType : Optional CashflowTypeEnum
    -- ^ The qualification of the type of cashflow, e.g.
    --   brokerage fee, premium, upfront fee etc. Particularly
    --   relevant when it cannot be inferred directly through
    --   lineage.
  discountFactor : Optional Decimal
    -- ^ The value representing the discount factor used to
    --   calculate the present value of the cashflow.
  id : Optional Text
  payerReceiver : PayerReceiver
  presentValueAmount : Optional Money
    -- ^ The amount representing the present value of the
    --   forecast payment.
  rosettaKey : Text
    deriving (Eq, Ord, Show)

-- | A class defining the cashflow representation of a
--   swap trade.
data CashflowRepresentation = CashflowRepresentation with
  cashflowsMatchParameters : Bool
    -- ^ A true/false flag to indicate whether the cashflows
    --   match the parametric definition of the stream, i.e.
    --   whether the cashflows could be regenerated from the
    --   parameters without loss of information.
  paymentCalculationPeriod : [PaymentCalculationPeriod]
    -- ^ The adjusted payment date and associated calculation
    --   period parameters required to calculate the actual or
    --   projected payment amount. A list of payment
    --   calculation period elements may be ordered in the
    --   document by ascending adjusted payment date. An FpML
    --   document containing an unordered list of payment
    --   calculation periods is still regarded as a conformant
    --   document.
  principalExchange : [PrincipalExchange]
    -- ^ The initial, intermediate and final principal
    --   exchange amounts. Typically required on cross
    --   currency interest rate swaps where actual exchanges
    --   of principal occur. A list of principal exchange
    --   elements may be ordered in the document by ascending
    --   adjusted principal exchange date. An FpML document
    --   containing an unordered principal exchange list is
    --   still regarded as a conformant document.
    deriving (Eq, Ord, Show)

-- | A class to qualify the closed state of an execution
--   or a contract through the combination or a state
--   (e.g. terminated, novated) and a set of dates:
--   activity date, effective date and, when relevant,
--   last payment date.
data ClosedState = ClosedState with
  activityDate : Date
    -- ^ The activity date on which the closing state took
    --   place, i.e. either the event date of the closing
    --   event (e.g. option exercise, contract early
    --   termination) or the contractual termination date.
  effectiveDate : Optional Date
    -- ^ The date on which the closing event contractually
    --   takes effect, when different from the activity date.
    --   When an explicit event effective date attribute is
    --   associated with the closing event, it will be that
    --   date. In the case of a cancellation event, it will be
    --   the date on which the cancelled event took place.
  lastPaymentDate : Optional Date
    -- ^ The date associated with the last payment in relation
    --   to the artefact (e.g. contract) to which this closed
    --   state applies. As an example, in the case of an early
    --   termination event, it would be the settlement date of
    --   the associated fee, if applicable.
  state : ClosedStateEnum
    -- ^ The qualification of what gave way to the contract or
    --   execution closure, e.g. allocation, termination, ...
    deriving (Eq, Ord, Show)

-- | A class to specify a financial contract object, which
--   can be invoked either within the context of an event,
--   or independently from it. It corresponds to the FpML
--   Trade in the Confirmation view (while the CDM
--   Execution class corresponds to the FpML trade in the
--   Pre-Trade view). The associated rosettaKey denotes
--   the ability to associate a hash value to the Contract
--   instantiations for the purpose of model
--   cross-referencing, in support of functionality such
--   as the event effect and the lineage.
data Contract = Contract with
  account : [Account]
    -- ^ Optional account information.
  clearedDate : Optional Date
    -- ^ If the trade was cleared (novated) through a central
    --   counterparty clearing service, this represents the
    --   date the trade was cleared (transferred to the
    --   central counterparty).
  closedState : Optional ClosedState
    -- ^ The qualification of what led to the contract closure
    --   alongside with the dates on which this closure took
    --   effect.
  contractIdentifier : [Identifier]
    -- ^ The identifier(s) that uniquely identify a contract,
    --   and which can be qualified by referencing or defining
    --   the issuer(s) of such identifier(s). There can be
    --   several contract identifier, an example of such being
    --   a contract is reportable to both the CFTC and ESMA
    --   and then has an associated USI (Unique Swap
    --   Identifier) UTI (Unique Trade Identifier).
  contractualProduct : ContractualProduct
    -- ^ The contractual product information that is
    --   associated with the contract, which combines the
    --   economic terms, the product identification and the
    --   product taxonomy. The corresponding FpML construct is
    --   the product abstract element and the associated
    --   substitution group.
  id : Optional Text
  party : [Party]
    -- ^ The parties to the contract. The cardinality is
    --   optional to address the case where the contract
    --   object is part of an event record, in which case the
    --   party is specified as part of that object. In that
    --   respect, the CDM approach is distinct from FpML,
    --   where party information is specified as part of a
    --   wrapper alongside the trade object.
  rosettaKey : Text
  tradeDate : TradeDate
    -- ^ The date on which the contract has been executed.
    deriving (Eq, Ord, Show)

-- | A class to specify a contract instantiation with
--   respect to the before and/or after state of lifecycle
--   events.
data ContractState = ContractState with
  contract : Contract
    deriving (Eq, Ord, Show)

-- | A class to specify the contractual products&#39;
--   economic terms, alongside their product
--   identification and product taxonomy. The contractual
--   product class is meant to be used across the
--   pre-execution, execution and (as part of the
--   Contract) post-execution lifecycle contexts.
data ContractualProduct = ContractualProduct with
  economicTerms : EconomicTerms
    -- ^ The economic terms associated with a contractual
    --   product, i.e. the set of features that are
    --   price-forming.
  productIdentification : Optional ProductIdentification
    -- ^ The product identification value(s) that might be
    --   associated with a contractual product. The CDM
    --   provides the ability to associate several product
    --   identification methods with a product.
  productTaxonomy : [ProductTaxonomy]
    -- ^ The product taxonomy value(s) associated with a
    --   contractual product.
    deriving (Eq, Ord, Show)

-- | A class to specify the quantity or notional amount
--   that is associated with a contractual product and
--   that is the base for the payout calculation. The
--   quantity attribute applies to products relating to
--   securities or tangible assets (such as equities or
--   commodities), while the notional amount applies to
--   products pertaining to interest rate, FX or credit
--   products.
data ContractualQuantity = ContractualQuantity with
  notionalSchedule : Optional NotionalSchedule
    -- ^ The contractual quantity when specified as a notional
    --   amount with an associated schedule, as used in the
    --   case of an amortizing swap where the notional amount
    --   decreases over time.
    deriving (Eq, Ord, Show)

-- | The credit default payout specification provides the
--   details necessary for determining when a credit
--   payout will be triggered as well as the parameters
--   for calculating the payout and the settlement terms.
--   The associated rosettaKey denotes the ability to
--   associate a hash value to the CreditDefaultPayout
--   instantiations for the purpose of model
--   cross-referencing, in support of functionality such
--   as the event effect and the lineage.
data CreditDefaultPayout = CreditDefaultPayout with
  generalTerms : GeneralTerms
    -- ^ The specification of the non-monetary terms for the
    --   Credit Derivative Transaction, including the buyer
    --   and seller and selected items from the ISDA 2014
    --   Credit Definition article II, such as the reference
    --   obligation and related terms.
  id : Optional Text
  protectionTerms : [ProtectionTerms]
    -- ^ Specifies the terms for calculating a payout to
    --   protect the buyer of the swap in the case of a
    --   qualified credit event.  These terms include the
    --   notional amount, the applicable credit events, the
    --   reference obligation, and in the case of a CDS on
    --   mortgage-backed securities, the floatingAmountEvents.
  rosettaKey : Text
    deriving (Eq, Ord, Show)

data Curve = Curve with
  interestRateCurve : Optional InterestRateCurve
    deriving (Eq, Ord, Show)

-- | A class to provide the ability to point to multiple
--   payment nodes in the document through the unbounded
--   paymentDatesReference.
data DateRelativeToCalculationPeriodDates = DateRelativeToCalculationPeriodDates with
  calculationPeriodDatesReference : [ReferenceWithMeta CalculationPeriodDates]
    -- ^ A set of href pointers to calculation period dates
    --   defined somewhere else in the document.
    deriving (Eq, Ord, Show)

-- | A class to provide the ability to point to multiple
--   payment nodes in the document through the unbounded
--   paymentDatesReference.
data DateRelativeToPaymentDates = DateRelativeToPaymentDates with
  paymentDatesReference : [ReferenceWithMeta PaymentDates]
    -- ^ A set of href pointers to payment dates defined
    --   somewhere else in the document.
    deriving (Eq, Ord, Show)

-- | List of dateTimes.
data DateTimeList = DateTimeList with
  dateTime : [ZonedDateTime]
    -- ^ The CDM specifies that the zoned date time is to be
    --   expressed in accordance with ISO 8601, either as UTC
    --   as an offset to UTC.
    deriving (Eq, Ord, Show)

-- | This class represents the full set of price-forming
--   features associated with a contractual product: the
--   payout component, the quantity, as well as the legal
--   optional provisions which have valuation
--   implications. A rosettaKeyValue is associated to the
--   contractual product economic terms for the purpose of
--   supporting hash-based reconciliations thanks to the
--   fact that its computation doesn&#39;t include meta
--   data, such as identifiers, references, schemes and
--   other rosettaKey artefacts. The rosettaKeyValue
--   default implementation is available as part of the
--   generated code as
--   org.isda.cdm.rosettakey.RosettaKeyValueHashFunction.
data EconomicTerms = EconomicTerms with
  payout : Payout
    -- ^ The payout specifies the future cashflow computation
    --   methodology which characterizes a financial product.
  quantity : [ContractualQuantity]
    -- ^ The specification of the notional amount that is the
    --   base for the payout calculation, through the
    --   ContractualQuantity class which provides a generic
    --   approach that is applicable across all asset classes.
    --   The quantity attribute applies to products relating
    --   to securities or tangible assets (such as equities or
    --   commodities), while the notional amount applies to
    --   products pertaining to interest rate, FX or credit
    --   products.
  rosettaKeyValue : Text
    deriving (Eq, Ord, Show)

-- | A class to specify the lifecycle event. The
--   associated rosettaKey denotes the ability to
--   associate a hash value to the Event instantiation for
--   the purpose of model cross-referencing, in support of
--   functionality such as the event effect and the
--   lineage.
data Event = Event with
  account : [Account]
    -- ^ Optional account information that could be associated
    --   to the event.
  action : ActionEnum
    -- ^ Specifies whether the event is a new, a correction or
    --   a cancellation.
  effectiveDate : Optional Date
    -- ^ The date on which the event contractually takes
    --   effect, when different from the event date.
  eventDate : Date
    -- ^ The date on which the event is taking place. This is
    --   the equivalent of the trade date in the case of an
    --   execution or a contract.
  eventEffect : Optional EventEffect
    -- ^ The set of effects associated with the lifecycle
    --   event, i.e. generated cashflows, contracts (from,
    --   say, novation events), listed products (from, say, a
    --   bond option exercise event)  values and more. Those
    --   are represented through a set of rosettaKey
    --   references. This attribute is optional in order to
    --   provide implementers with the ability not to make use
    --   of this feature.
  eventIdentifier : [Identifier]
    -- ^ The identifier(s) that uniquely identify a lifecycle
    --   event. The unbounded cardinality is meant to provide
    --   the ability to associate identifiers that are issued
    --   by distinct parties. As an example, each of the
    --   parties to the event may choose to associate their
    --   own identifiers to the event.
  eventQualifier : Optional Text
    -- ^ The CDM event qualifier, which corresponds to the
    --   outcome of the isEvent qualification logic which
    --   qualifies the lifecycle event as a function of its
    --   features (e.g. PartialTermination,
    --   ClearingSubmission, Novation, ...).
  functionCall : Optional Text
    -- ^ This is placeholder concept for a function call into
    --   a calculation that will return an outcome. This
    --   concept needs to be further firmed out.
  id : Optional Text
  intent : Optional IntentEnum
    -- ^ The intent attribute is meant to be specified when
    --   the event qualification cannot be programmatically
    --   inferred from the event features. As a result it is
    --   only associated with those primitives that can give
    --   way to such ambiguity, the quantityChange being one
    --   of those. An example of such is a reduction in the
    --   trade notional, which could be interpreted as either
    --   a trade correction (unless a maximum period of time
    --   post-event is specified as part of the
    --   qualification), a partial termination or a portfolio
    --   rebalancing in the case of an equity swap. On the
    --   other hand, an event such as the exercise is not
    --   expected to have an associated intent as there should
    --   not be ambiguity.
  lineage : Optional Lineage
    -- ^ The lineage attribute provides a linkage among
    --   lifecycle events through the rosettaKey hash value.
    --   One example is when a given lifecycle event is being
    --   corrected or cancelled. In such case, each subsequent
    --   event will have lineage into the prior version of
    --   that event. The second broad use case is when an
    --   event has a dependency upon either another event
    --   (e.g. the regular payment associated with a fix/float
    --   swap will have a lineage into the reset event, which
    --   will in turn have a lineage into the observation
    --   event for the floating rate and the contract) or a
    --   contract (e.g. the exercise of an option has a
    --   lineage into that option).
  messageInformation : Optional MessageInformation
  party : [Party]
    -- ^ The specification of the event parties. This
    --   attribute is optional, as not applicable to certain
    --   events (e.g. most of the observations).
  primitive : PrimitiveEvent
    -- ^ The elemental component(s) that specify the lifecycle
    --   events. Each of the primitive/elemental components
    --   listed as part of the PrimitiveEvent class has
    --   distinctive features that allow to specify the
    --   lifecycle event, either by itself or in combination
    --   with some other of such components.
  rosettaKey : Text
  timestamp : [EventTimestamp]
    -- ^ The set of timestamp(s) associated with the event as
    --   a collection of [dateTime, qualifier].
    deriving (Eq, Ord, Show)

-- | The set of operational and positional effects
--   associated with a lifecycle event, alongside the
--   reference to the contract reference(s) that is
--   subject to the event (and is positioned in the before
--   state of the event primitive).
data EventEffect = EventEffect with
  contract : [Text]
    -- ^ A pointer to the contract effect(s), an example of
    --   such being the outcome of a new trade, swaption
    --   exercise or novation event.
  effectedContract : [Text]
    -- ^ A pointer to the contract(s) to which the event
    --   effect(s) apply, i.e. in the before event state.
  effectedExecution : [Text]
    -- ^ A pointer to the execution(s) to which the event
    --   effect(s) apply, i.e. in the before event state.
  execution : [Text]
    -- ^ A pointer to the execution effect(s), an example of
    --   such being a clearing submission event when taking
    --   place on the back of an execution.
  productIdentifier : [Text]
    -- ^ A pointer to the product identifier effect(s), an
    --   example of such being the outcome of the physical
    --   exercise of a bond option.
  transfer : [Text]
    -- ^ A pointer to the transfer effect(s), either a cash,
    --   security or other asset.
    deriving (Eq, Ord, Show)

-- | A class to represent the various set of timestamps
--   that can be associated with lifecycle events, as a
--   collection of [dateTime, qualifier]
data EventTimestamp = EventTimestamp with
  dateTime : ZonedDateTime
    -- ^ The CDM specifies that the zoned date time is to be
    --   expressed in accordance with ISO 8601, either as UTC
    --   as an offset to UTC.
  qualification : EventTimeStampQualificationEnum
    deriving (Eq, Ord, Show)

-- | A class to specify an execution, which consists
--   essentially in the economic terms which are agreed
--   between the parties, alongside with the qualification
--   of the type of execution. The associated rosettaKey
--   denotes the ability to associate a hash value to the
--   respective Execution instantiations for the purpose
--   of model cross-referencing, in support of
--   functionality such as the event effect and the
--   lineage.
data Execution = Execution with
  closedState : Optional ClosedState
    -- ^ The qualification what led to the execution closure
    --   alongside with the dates on which this closure takes
    --   effect.
  contractualProduct : ContractualProduct
  identifier : [Identifier]
    -- ^ The identifier(s) associated with the execution.
  party : [Party]
    -- ^ The party reference is optional because positioned as
    --   part of the Event class when the execution is
    --   specified as part of such context.
  rosettaKey : Text
  tradeDate : (FieldWithMeta Date)
    -- ^ The trade/execution date.
    deriving (Eq, Ord, Show)

-- | A class to specify an execution instantiation with
--   respect to the before and/or after state of lifecycle
--   events.
data ExecutionState = ExecutionState with
  execution : Execution
    deriving (Eq, Ord, Show)

-- | The exercise outcome combines the option contract
--   (which states would be &#39;Exercised&#39; in case of
--   a full exercise and which would have a reduced
--   notional in case of partial exercise) and either a
--   physical or partial exercise.
data ExerciseOutcome = ExerciseOutcome with
  cashExercise : Optional Cashflow
  contract : Contract
    deriving (Eq, Ord, Show)

-- | This primitive leverages the FpML OptionExercise
--   construct, except for the exerciseTiming which is
--   deemed as associated to a request for exercise that
--   is meant to take place, as opposed to the actual
--   exercise event.
data ExercisePrimitive = ExercisePrimitive with
  after : ExerciseOutcome
  before : ContractState
  fullExercise : Bool
    deriving (Eq, Ord, Show)

-- | A class defining a floating interest rate through the
--   specification of the floating rate index, the tenor,
--   the multiplier schedule, the spread, the
--   qualification of whether a specific rate treatment
--   and/or a cap or floor apply.
data FloatingRate = FloatingRate with
  floatingRateIndex : (FieldWithMeta FloatingRateIndexEnum)
    -- ^ The reference index that is used to specify the
    --   floating interest rate. The FpML standard maintains
    --   the list of such indices, which are positioned as
    --   enumeration values as part of the CDM.
  id : Optional Text
  indexTenor : Optional Period
    -- ^ The ISDA Designated Maturity, i.e. the floating rate
    --   tenor.
  spreadSchedule : [SpreadSchedule]
    -- ^ The ISDA Spread or a Spread schedule expressed as
    --   explicit spreads and dates. In the case of a
    --   schedule, the step dates may be subject to adjustment
    --   in accordance with any adjustments specified in
    --   calculationPeriodDatesAdjustments. The spread is a
    --   per annum rate, expressed as a decimal. For purposes
    --   of determining a calculation period amount, if
    --   positive the spread will be added to the floating
    --   rate and if negative the spread will be subtracted
    --   from the floating rate. A positive 10 basis point
    --   (0.1%) spread would be represented as 0.001.
    deriving (Eq, Ord, Show)

-- | A class defining parameters associated with a
--   floating rate reset. This class forms part of the
--   cashflows representation of a stream.
data FloatingRateDefinition = FloatingRateDefinition with
  calculatedRate : Optional Decimal
    -- ^ The final calculated rate for a calculation period
    --   after any required averaging of rates A calculated
    --   rate of 5% would be represented as 0.05.
  floatingRateMultiplier : Optional Decimal
    -- ^ A rate multiplier to apply to the floating rate. The
    --   multiplier can be a positive or negative decimal.
    --   This element should only be included if the
    --   multiplier is not equal to 1 (one).
  rateObservation : [RateObservation]
    -- ^ The details of a particular rate observation,
    --   including the fixing date and observed rate. A list
    --   of rate observation elements may be ordered in the
    --   document by ascending adjusted fixing date. An FpML
    --   document containing an unordered list of rate
    --   observations is still regarded as a conformant
    --   document.
  spread : Optional Decimal
    -- ^ The ISDA Spread, if any, which applies for the
    --   calculation period. The spread is a per annum rate,
    --   expressed as a decimal. For purposes of determining a
    --   calculation period amount, if positive the spread
    --   will be added to the floating rate and if negative
    --   the spread will be subtracted from the floating rate.
    --   A positive 10 basis point (0.1%) spread would be
    --   represented as 0.001.
    deriving (Eq, Ord, Show)

-- | A class to specify the floating interest rate by
--   extending the floating rate definition with a set of
--   attributes that specify such rate: the initial value
--   specified as part of the trade, the rounding
--   convention, the averaging method and the negative
--   interest rate treatment.
data FloatingRateSpecification = FloatingRateSpecification with
  floatingRateIndex : (FieldWithMeta FloatingRateIndexEnum)
    -- ^ The reference index that is used to specify the
    --   floating interest rate. The FpML standard maintains
    --   the list of such indices, which are positioned as
    --   enumeration values as part of the CDM.
  floatingRateMultiplierSchedule : Optional Schedule
    -- ^ A rate multiplier or multiplier schedule to apply to
    --   the floating rate. A multiplier schedule is expressed
    --   as explicit multipliers and dates. In the case of a
    --   schedule, the step dates may be subject to adjustment
    --   in accordance with any adjustments specified in the
    --   calculationPeriodDatesAdjustments. The multiplier can
    --   be a positive or negative decimal. This element
    --   should only be included if the multiplier is not
    --   equal to 1 (one) for the term of the stream.
  id : Optional Text
  indexTenor : Optional Period
    -- ^ The ISDA Designated Maturity, i.e. the floating rate
    --   tenor.
  initialRate : Optional Decimal
    -- ^ The initial floating rate reset agreed between the
    --   principal parties involved in the trade. This is
    --   assumed to be the first required reset rate for the
    --   first regular calculation period. It should only be
    --   included when the rate is not equal to the rate
    --   published on the source implied by the floating rate
    --   index. An initial rate of 5% would be represented as
    --   0.05.
  spreadSchedule : [SpreadSchedule]
    -- ^ The ISDA Spread or a Spread schedule expressed as
    --   explicit spreads and dates. In the case of a
    --   schedule, the step dates may be subject to adjustment
    --   in accordance with any adjustments specified in
    --   calculationPeriodDatesAdjustments. The spread is a
    --   per annum rate, expressed as a decimal. For purposes
    --   of determining a calculation period amount, if
    --   positive the spread will be added to the floating
    --   rate and if negative the spread will be subtracted
    --   from the floating rate. A positive 10 basis point
    --   (0.1%) spread would be represented as 0.001.

    deriving (Eq, Ord, Show)

-- | A class for defining a date frequency, e.g. one day,
--   three months, through the combination of an integer
--   value and a standardized period value that is
--   specified as part of an enumeration.
data Frequency = Frequency with
  id : Optional Text
  period : PeriodExtendedEnum
    -- ^ A time period, e.g. a day, week, month, year or term
    --   of the stream.
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2, or 3. If the
    --   period value is T (Term) then period multiplier must
    --   contain the value 1.
    deriving (Eq, Ord, Show)

-- | A class specifying a set of non-monetary terms for
--   the Credit Derivative Transaction, including the
--   buyer and seller and selected items from the ISDA
--   2014 Credit Definition article II, such as the
--   reference obligation and related terms. The CDM
--   GeneralTerms class corresponds to the FpML
--   GeneralTerms complex type, except that the
--   effectiveDate and scheduledTerminationDate have been
--   positioned as part of the InterestRatePayout class in
--   the CDM instead of in GeneralTerms.
data GeneralTerms = GeneralTerms with
  additionalTerm : [FieldWithMeta Text]
    -- ^ This attribute is used for representing information
    --   contained in the Additional Terms field of the 2003
    --   Master Credit Derivatives confirm.
  buyerSeller : BuyerSeller
    -- ^ The credit default payout buyer/seller parties.
  dateAdjustments : Optional BusinessDayAdjustments
    -- ^ ISDA Credit 2003 Definitions: Business Day and
    --   Business Day Convention.
  modifiedEquityDelivery : Optional Bool
    -- ^ Value of this attribute set to &#39;true&#39;
    --   indicates that modified equity delivery is
    --   applicable.
  substitution : Optional Bool
    -- ^ Value of this attribute set to &#39;true&#39;
    --   indicates that substitution is applicable.
    deriving (Eq, Ord, Show)

-- | A class to specify a generic identifier, applicable
--   to CDM artefacts such as executions, contracts,
--   lifecycle events and legal documents. An issuer can
--   be associated with the actual identifier value as a
--   way to properly qualify it.
data Identifier = Identifier with
  assignedIdentifier : [AssignedIdentifier]
    -- ^ The identifier value. This level of indirection
    --   between the issuer and the identifier and its version
    --   provides the ability to associate multiple
    --   identifiers to one issuer, consistently with the FpML
    --   PartyTradeIdentifier.
  id : Optional Text
  issuer : Optional (FieldWithMeta Text)
    -- ^ The identifier issuer, when specified explicitly
    --   alongside the identifier value (instead of being
    --   specified by reference to a party).
  issuerReference : Optional (ReferenceWithMeta Party)
    -- ^ The identifier issuer, when specified by reference to
    --   a party specified as part of the transaction.
    deriving (Eq, Ord, Show)

-- | The primitive event for the inception of a new
--   contract between parties. It is expected that this
--   primitive will be adjusted or deprecated once the CDM
--   scope is extended to the pre-execution space.
data Inception = Inception with
  after : PostInceptionState
    -- ^ The after state corresponds to the new contract
    --   between the parties.
  before : [ContractState]
    -- ^ The (0..0) cardinality reflects the fact that there
    --   is no contract in the before state of an inception
    --   primitive. As noted in the definition associated with
    --   the class, this is expected to change once the CDM
    --   scope is extended to the pre-execution space.
    deriving (Eq, Ord, Show)

-- | A class defining the source for a piece of
--   information (e.g. a rate fix or an FX fixing). The
--   attribute names have been adjusted from FpML to
--   address the fact that the information is not limited
--   to rates.
data InformationSource = InformationSource with
  sourcePage : Optional (FieldWithMeta Text)
    -- ^ A specific page for the source for obtaining a market
    --   data point. In FpML, this is specified as a scheme,
    --   rateSourcePageScheme, for which no coding Scheme or
    --   URI is specified.
  sourcePageHeading : Optional Text
    -- ^ The heading for the source on a given source page.
  sourceProvider : (FieldWithMeta InformationProviderEnum)
    -- ^ An information source for obtaining a market data
    --   point. For example Bloomberg, Reuters, Telerate, etc.
    deriving (Eq, Ord, Show)

data InterestRateCurve = InterestRateCurve with
  floatingRateIndex : (FieldWithMeta FloatingRateIndexEnum)
  tenor : Period
    deriving (Eq, Ord, Show)

-- | A class to specify all of the terms necessary to
--   define and calculate a cash flow based on a fixed, a
--   floating or an inflation index rate. The interest
--   rate payout can be applied to interest rate swaps and
--   FRA (which both have two associated interest rate
--   payouts), credit default swaps (to represent the fee
--   leg when subject to periodic payments) and equity
--   swaps (to represent the funding leg). The associated
--   rosettaKey denotes the ability to associate a hash
--   value to the InterestRatePayout instantiations for
--   the purpose of model cross-referencing, in support of
--   functionality such as the event effect and the
--   lineage.
data InterestRatePayout = InterestRatePayout with
  calculationPeriodDates : CalculationPeriodDates
    -- ^ The parameters used to generate the calculation
    --   period dates schedule, including the specification of
  dayCountFraction : Optional (FieldWithMeta DayCountFractionEnum)
    -- ^ The day count fraction. The cardinality has been
    --   relaxed when compared with the FpML interest rate
    --   swap for the purpose of accommodating standardized
    --   credit default swaps which DCF is not explicitly
    --   stated as part of the economic terms. The data rule
    --   InterestRatePayout_dayCountFraction requires that the
    --   DCF be stated for interest rate products.
  fixedAmount : Optional Text
    -- ^ Fixed Amount Calculation
  floatingAmount : Optional Text
    -- ^ Floating Amount Calculation
  id : Optional Text
  payerReceiver : Optional PayerReceiver
    -- ^ The payer/seller paradigm applies to swap products,
    --   whether interest rate swaps or the fee leg of credit
    --   default swaps.
  paymentDates : Optional PaymentDates
    -- ^ The payment date schedule, as defined by the
    --   parameters that are needed to specify it, either in a
    --   parametric way or by reference to another schedule of
    --   dates (e.g. the reset dates).
  quantity : Optional ContractualQuantity
    -- ^ The specification of the notional amount that is
    --   associated with a contractual product and that is the
    --   base for the payout calculation, through the
    --   ContractualQuantity class which provides a generic
    --   approach that is applicable across all asset classes.
    --   The quantity attribute applies to products relating
    --   to securities or tangible assets (such as equities or
    --   commodities), while the notional amount applies to
    --   products pertaining to interest rate, FX or credit
    --   products.
  rateSpecification : RateSpecification
    -- ^ The specification of the rate value(s) applicable to
    --   the contract using either a floating rate
    --   calculation, a single fixed rate, a fixed rate
    --   schedule, or an inflation rate calculation.
  resetDates : Optional ResetDates
    -- ^ The reset dates schedule, i.e. the dates on which the
    --   new observed index value is applied for each period
    --   and the interest rate hence begins to accrue.
  rosettaKey : Text
    deriving (Eq, Ord, Show)

-- | A class to provide lineage information across
--   lifecycle events through a pointer or set of pointers
--   into the event(s), contract(s) and, possibly, payout
--   components that the event is dependent on or relates
--   to. As an example, if an inception event is
--   corrected, the correction event will have a lineage
--   into the initial event, which takes the form of a
--   rosettaKey into that initial inception event. Two
--   referencing mechanisms are provided as part of the
--   CDM: either the rosettaKey, which corresponds to the
--   hash value of the CDM class which is referred to, or
--   a reference qualifier which is meant to provide
--   support for the ingestion of xml documents with
--   id/href mechanisms. The CDM recommends the use of the
--   rosettaKey and provides a default implementation
--   which is accessible in the generated code through
--   org.isda.cdm.rosettakey.RosettaKeyValueHashFunction.
--   If implementers want to use an alternative hashing
--   mechanism, the API in which they need to plug it is
--   com.rosetta.model.lib.HashFunction.
data Lineage = Lineage with
  cashflowReference : [ReferenceWithMeta Cashflow]
    -- ^ The reference to the instantiation of a Cashflow
    --   payout component object. An expected typical usage is
    --   to provide lineage for the payment of, say, the
    --   option premium or the swap initial fee. The
    --   definition associated to the Lineage class provides
    --   more details with respect to those referencing
    --   approaches, their expected usage and available
    --   implementation.
  contractReference : [ReferenceWithMeta Contract]
    -- ^ The reference to the instantiation of a Contract
    --   object. The definition associated to the Lineage
    --   class provides more details with respect to those
    --   referencing approaches, their expected usage and
    --   available implementation.
  creditDefaultPayoutReference : [ReferenceWithMeta CreditDefaultPayout]
    -- ^ The reference to the instantiation of a
    --   CreditdefaultPayout component object. The definition
    --   associated to the Lineage class provides more details
    --   with respect to those referencing approaches, their
    --   expected usage and available implementation.
  eventReference : [ReferenceWithMeta Event]
    -- ^ The reference to the instantiation of an Event
    --   object, either through a rosettaKey or an xml-derived
    --   id/href mechanism. The definition associated to the
    --   Lineage class provides more details with respect to
    --   those referencing approaches, their expected usage
    --   and available implementation.
  interestRatePayoutReference : [ReferenceWithMeta InterestRatePayout]
    -- ^ The reference to the instantiation of a
    --   InterestRatePayout component object. An expected
    --   typical usage is to provide lineage for the payment
    --   of, say, an interest rate swap reset, with the
    --   ability to relate the gross cashflow amounts to the
    --   respective payout components. The definition
    --   associated to the Lineage class provides more details
    --   with respect to those referencing approaches, their
    --   expected usage and available implementation.
    deriving (Eq, Ord, Show)

-- | This class corresponds to the components of the FpML
--   MessageHeader.model.
data MessageInformation = MessageInformation with
  copyTo : [FieldWithMeta Text]
    -- ^ A unique identifier (within the specified coding
    --   scheme) giving the details of some party to whom a
    --   copy of this message will be sent for reference.
  messageId : (FieldWithMeta Text)
    -- ^ A unique identifier assigned to the message.
  sentBy : Optional (FieldWithMeta Text)
    -- ^ The identifier for the originator of a message
    --   instance.
  sentTo : [FieldWithMeta Text]
    -- ^ The identifier(s) for the recipient(s) of a message
    --   instance.
    deriving (Eq, Ord, Show)

-- | A class defining a currency amount.
data Money = Money with
  amount : Decimal
    -- ^ The monetary quantity in currency units.
  currency : (FieldWithMeta Text)
    -- ^ The currency in which the associated amount is
    --   denominated. The list of valid currencies is not
    --   presently positioned as an enumeration as part of the
    --   CDM because that scope is limited to the values
    --   specified by ISDA and FpML. As a result, implementers
    --   have to make reference to the relevant standard, such
    --   as the ISO 4217 standard for currency codes.
  id : Optional Text
    deriving (Eq, Ord, Show)

-- | A class to represent the attributes that are specific
--   to a natural person.
data NaturalPerson = NaturalPerson with
  dateOfBirth : Optional Date
    -- ^ The natural person&#39;s date of birth.
  firstName : Text
    -- ^ The natural person&#39;s first name. It is optional
    --   in FpML.
  honorific : Optional Text
    -- ^ An honorific title, such as Mr., Ms., Dr. etc.
  id : Optional Text
  initial : [Text]
  middleName : [Text]
  suffix : Optional Text
    -- ^ Name suffix, such as Jr., III, etc.
  surname : Text
    -- ^ The natural person&#39;s surname.
    deriving (Eq, Ord, Show)

-- | A class to specify the role(s) that natural person(s)
--   may have in relation to the contract.
data NaturalPersonRole = NaturalPersonRole with
  personReference : (ReferenceWithMeta NaturalPerson)
    -- ^ A reference to the natural person to whom the role
    --   refers to.
    deriving (Eq, Ord, Show)

-- | A class defining a currency amount or a currency
--   amount schedule.
data NonNegativeAmountSchedule = NonNegativeAmountSchedule with
  currency : (FieldWithMeta Text)
    -- ^ The currency in which the notional amount schedule is
    --   denominated. The currency is specified outside of the
    --   actual schedule in order to be applied uniformly to
    --   it. The list of valid currencies is not presently
    --   positioned as an enumeration as part of the CDM
    --   because that scope is limited to the values specified
    --   by ISDA and FpML. As a result, implementers have to
    --   make reference to the relevant standard, such as the
    --   ISO 4217 standard for currency codes.
  id : Optional Text
  initialValue : Decimal
    -- ^ The non-negative initial rate or amount, as the case
    --   may be. An initial rate of 5% would be represented as
    --   0.05.
  step : [NonNegativeStep]
    -- ^ The schedule of step date and non-negative value
    --   pairs. On each step date the associated step value
    --   becomes effective. A list of steps may be ordered in
    --   the document by ascending step date. An FpML document
    --   containing an unordered list of steps is still
    --   regarded as a conformant document.
    deriving (Eq, Ord, Show)

-- | A class defining a schedule of non-negative rates or
--   amounts in terms of an initial value and then a
--   series of step date and value pairs. On each step
--   date the rate or amount changes to the new step
--   value. The series of step date and value pairs are
--   optional. If not specified, this implies that the
--   initial value remains unchanged over time.
data NonNegativeSchedule = NonNegativeSchedule with
  id : Optional Text
  initialValue : Decimal
    -- ^ The non-negative initial rate or amount, as the case
    --   may be. An initial rate of 5% would be represented as
    --   0.05.
  step : [NonNegativeStep]
    -- ^ The schedule of step date and non-negative value
    --   pairs. On each step date the associated step value
    --   becomes effective. A list of steps may be ordered in
    --   the document by ascending step date. An FpML document
    --   containing an unordered list of steps is still
    --   regarded as a conformant document.
    deriving (Eq, Ord, Show)

-- | A class defining a step date and non-negative step
--   value pair. This step definitions are used to define
--   varying rate or amount schedules, e.g. a notional
--   amortisation or a step-up coupon schedule.
data NonNegativeStep = NonNegativeStep with
  id : Optional Text
  stepDate : Date
    -- ^ The date on which the associated stepValue becomes
    --   effective. This day may be subject to adjustment in
    --   accordance with a business day convention.
  stepValue : Decimal
    -- ^ The non-negative rate or amount which becomes
    --   effective on the associated stepDate. A rate of 5%
    --   would be represented as 0.05.
    deriving (Eq, Ord, Show)

-- | A class specifying the notional amount or notional
--   amount schedule associated with a contractual
--   product. The notional schedule will be captured
--   explicitly, specifying the dates that the notional
--   changes and the outstanding notional amount that
--   applies from that date. A parametric representation
--   of the rules defining the notional step schedule can
--   optionally be included.
data NotionalSchedule = NotionalSchedule with
  id : Optional Text
  notionalStepSchedule : NonNegativeAmountSchedule
    -- ^ The notional amount when expressed as a varying
    --   notional alongside a date schedule. The step dates
    --   may be subject to adjustments in accordance with any
    --   adjustments specified in
    --   calculationPeriodDatesAdjustments.
    deriving (Eq, Ord, Show)

-- | A class to specify the primitive object to specify
--   market observation events, which is applicable across
--   all asset classes.
data ObservationPrimitive = ObservationPrimitive with
  date : Date
    -- ^ The observation date.
  observation : Decimal
    -- ^ The observed value.
  side : Optional QuotationSideEnum
    -- ^ The side (bid/mid/ask) of the observation, when
    --   applicable.
  source : ObservationSource
    -- ^ The observation source, such as an interest rate
    --   curve or an information provider.
  time : Optional TimeZone
    -- ^ The observation time.
    deriving (Eq, Ord, Show)

-- | The observation source can be composed of an curve
--   and/or and information source.
data ObservationSource = ObservationSource with
  curve : Optional Curve
  informationSource : Optional InformationSource
    deriving (Eq, Ord, Show)

-- | A class defining an offset used in calculating a new
--   date relative to a reference date, e.g. calendar
--   days, business days, commodity Business days, etc.
data Offset = Offset with
  dayType : Optional DayTypeEnum
    -- ^ In the case of an offset specified as a number of
    --   days, this element defines whether consideration is
    --   given as to whether a day is a good business day or
    --   not. If a day type of business days is specified then
    --   non-business days are ignored when calculating the
    --   offset. The financial business centers to use for
    --   determination of business days are implied by the
    --   context in which this element is used. This element
    --   must only be included when the offset is specified as
    --   a number of days. If the offset is zero days then the
    --   dayType element should not be included.
  id : Optional Text
  period : PeriodEnum
    -- ^ A time period, e.g. a day, week, month or year of the
    --   stream. If the periodMultiplier value is 0 (zero)
    --   then period must contain the value D (day).
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
    --   negative value can be used when specifying an offset
    --   relative to another date, e.g. -2 days.
    deriving (Eq, Ord, Show)

-- | A class to specify a party, without a qualification
--   as to whether this party is a legal entity or a
--   natural person, although the model provides the
--   ability to associate a person (or set of persons) to
--   a party, which use case would imply that such party
--   would be a legal entity (even if not formally
--   specified as such).
data Party = Party with
  account : Optional Account
    -- ^ The account that might be associated with the party.
    --   At most one account can be specified, as it is
    --   expected that this information is used in the context
    --   of a contract or legal document where only one
    --   account per party can be associated with such object.
  id : Optional Text
  name : Optional (FieldWithMeta Text)
    -- ^ The party name.
  partyId : [FieldWithMeta Text]
    -- ^ The identifier associated with a party, e.g. the 20
    --   digits LEI code.
  person : [NaturalPerson]
    -- ^ The person(s) who might be associated with the party
    --   as part of the execution, contract or legal document.
    deriving (Eq, Ord, Show)

-- | A class to represent the FpML PayerReceiver.model.
data PayerReceiver = PayerReceiver with
  payerAccountReference : Optional (ReferenceWithMeta Account)
    -- ^ A reference to the account responsible for making the
    --   payments defined by this structure.
  payerPartyReference : (ReferenceWithMeta Party)
    -- ^ A reference to the party responsible for making the
    --   payments defined by this structure.
  receiverAccountReference : Optional (ReferenceWithMeta Account)
    -- ^ A reference to the account that receives the payments
    --   corresponding to this structure.
  receiverPartyReference : (ReferenceWithMeta Party)
    -- ^ A reference to the party that receives the payments
    --   corresponding to this structure.
    deriving (Eq, Ord, Show)

-- | A class defining the adjusted payment date and
--   associated calculation period parameters required to
--   calculate the actual or projected payment amount.
--   This class forms part of the cashflow representation
--   of a swap stream.
data PaymentCalculationPeriod = PaymentCalculationPeriod with
  adjustedPaymentDate : Optional Date
    -- ^ The adjusted payment date. This date should already
    --   be adjusted for any applicable business day
    --   convention. This component is not intended for use in
    --   trade confirmation but may be specified to allow the
    --   fee structure to also serve as a cashflow type
    --   component.
  calculationPeriod : [CalculationPeriod]
    -- ^ The parameters used in the calculation of a fixed or
    --   floating rate calculation period amount. A list of
    --   calculation period elements may be ordered in the
    --   document by ascending start date. An FpML document
    --   which contains an unordered list of calculation
    --   periods is still regarded as a conformant document.
  id : Optional Text
  unadjustedPaymentDate : Optional Date
    -- ^ The unadjusted payment date.
    deriving (Eq, Ord, Show)

-- | A class to specify the parameters to generate the
--   payment date schedule, either through a parametric
--   representation or by reference to other dates
--   specified in the instance document (e.g. the reset
--   dates or valuation dates). The CDM representation
--   combines the FpML payment dates representation for
--   interest rate and total return swap products by
--   providing the ability to specify the payment dates as
--   a function of some other dates specified in the
--   instance document.
data PaymentDates = PaymentDates with
  id : Optional Text
  payRelativeTo : Optional PayRelativeToEnum
    -- ^ Specifies whether the payments occur relative to each
    --   adjusted calculation period start date or end date,
    --   each reset date, valuation date or the last pricing
    --   date. Calculation period start date means relative to
    --   the start of the first calculation period
    --   contributing to a given payment. Similarly,
    --   calculation period end date means the end of the last
    --   calculation period contributing to a given payment.
    --   The valuation date is applicable for Brazilian-CDI
    --   and equity swaps.
  paymentDatesAdjustments : Optional BusinessDayAdjustments
    -- ^ The definition of the business day convention and
    --   financial business centers used for adjusting the
    --   payment date if it would otherwise fall on a day that
    --   is not a business day in the specified business
    --   center.
  paymentDaysOffset : Optional Offset
    -- ^ If early payment or delayed payment is required,
    --   specifies the number of days offset that the payment
    --   occurs relative to what would otherwise be the
    --   unadjusted payment date. The offset can be specified
    --   in terms of either calendar or business days. Even in
    --   the case of a calendar days offset, the resulting
    --   payment date, adjusted for the specified calendar
    --   days offset, will still be adjusted in accordance
    --   with the specified payment dates adjustments. This
    --   element should only be included if early or delayed
    --   payment is applicable, i.e. if the periodMultiplier
    --   element value is not equal to zero. An early payment
    --   would be indicated by a negative periodMultiplier
    --   element value and a delayed payment (or payment lag)
    --   would be indicated by a positive periodMultiplier
    --   element value.
  paymentFrequency : Optional Frequency
    -- ^ The frequency at which regular payment dates occur.
    --   If the payment frequency is equal to the frequency
    --   defined in the calculation period dates component
    --   then one calculation period contributes to each
    --   payment amount. If the payment frequency is less
    --   frequent than the frequency defined in the
    --   calculation period dates component then more than one
    --   calculation period will contribute to the payment
    --   amount. A payment frequency more frequent than the
    --   calculation period frequency or one that is not a
    --   multiple of the calculation period frequency is
    --   invalid. If the payment frequency is of value T
    --   (term), the period is defined by the effectiveDate
    --   and the terminationDate.
    deriving (Eq, Ord, Show)

-- | A class to represent the set of future cashflow
--   methodologies in the form of specific payout
--   class(es) that can be associated for the purpose of
--   specifying a financial product. For example, two
--   interest rate payouts can be combined to specify an
--   interest rate swap, or one interest rate payout can
--   be combined with a credit default payout to specify a
--   credit default swap.
data Payout = Payout with
  cashflow : [Cashflow]
    -- ^ A cashflow between the parties to the trade. For
    --   interest rate and equity products, this corresponds
    --   to the FpML additionalPayment element. For credit
    --   default swaps, this corresponds to the FpML
    --   initialPayment element and the singlePayment element
    --   of the fee leg. For option products, it represents
    --   the FpML premium element.
  creditDefaultPayout : Optional CreditDefaultPayout
    -- ^ The credit default payout, which provides the details
    --   necessary for determining when a credit payout will
    --   be triggered as well as the parameters for
    --   calculating the payout and the settlement terms.
  interestRatePayout : [InterestRatePayout]
    -- ^ All of the terms necessary to define and calculate a
    --   cash flow based on a fixed, a floating or an
    --   inflation index rate. The interest rate payout can be
    --   applied to interest rate swaps and FRA (which both
    --   have two associated interest rate payouts), credit
    --   default swaps (to represent the fee leg when subject
    --   to periodic payments) and equity swaps (to represent
    --   the funding leg).
    -- ^ The option payout.
    deriving (Eq, Ord, Show)

-- | A class to define recurring periods or time offsets.
data Period = Period with
  id : Optional Text
  period : PeriodEnum
    -- ^ A time period, e.g. a day, week, month or year of the
    --   stream. If the periodMultiplier value is 0 (zero)
    --   then period must contain the value D (day).
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
    --   negative value can be used when specifying an offset
    --   relative to another date, e.g. -2 days.
    deriving (Eq, Ord, Show)

data PostInceptionState = PostInceptionState with
  contract : Contract
    deriving (Eq, Ord, Show)

-- | A class to specify the set of elemental/primitives
--   components that are used to specify lifecycle events.
--   Lifecycle events make use of one or several of those
--   elemental components specified as part of this class.
data PrimitiveEvent = PrimitiveEvent with
  allocation : [AllocationPrimitive]
  exercise : Optional ExercisePrimitive
  inception : [Inception]
  observation : [ObservationPrimitive]
  quantityChange : [QuantityChangePrimitive]
  reset : [ResetPrimitive]
  termsChange : Optional TermsChangePrimitive
  transfer : [TransferPrimitive]
    deriving (Eq, Ord, Show)

-- | A class for defining a principal exchange amount and
--   adjusted exchange date. This class forms part of the
--   cashflow representation of a swap stream.
data PrincipalExchange = PrincipalExchange with
  adjustedPrincipalExchangeDate : Optional Date
    -- ^ The adjusted principal exchange date. This date
    --   should already be adjusted for any applicable
    --   business day convention.
  discountFactor : Optional Decimal
    -- ^ The value representing the discount factor used to
    --   calculate the present value of the principal exchange
    --   amount.
  id : Optional Text
  presentValuePrincipalExchangeAmount : Optional Money
    -- ^ The amount representing the present value of the
    --   principal exchange.
  principalExchangeAmount : Optional Decimal
    -- ^ The principal exchange amount. This amount should be
    --   positive if the stream payer is paying the exchange
    --   amount and signed negative if they are receiving it.
  unadjustedPrincipalExchangeDate : Optional Date
    -- ^ The non adjusted principal exchange date.
    deriving (Eq, Ord, Show)

-- | A class to combine the CDM product qualifier with
--   other product qualifiers, such as the FpML ones.
--   While the CDM product qualifier is derived by the CDM
--   from the product payout features, the other product
--   identification elements are assigned by some external
--   sources and correspond to values specified by other
--   data representation protocols.
data ProductIdentification = ProductIdentification with
  productQualifier : Optional Text
    -- ^ The CDM product qualifier, which corresponds to the
    --   outcome of the isProduct qualification logic. This
    --   value is derived by the CDM from the product payout
    --   features.
    deriving (Eq, Ord, Show)

-- | The product taxonomy, which is composed of a taxonomy
--   value and a taxonomy source.
data ProductTaxonomy = ProductTaxonomy with
  taxonomyValue : Text
    -- ^ The taxonomy value.
    deriving (Eq, Ord, Show)

-- | A class to specify the terms for calculating a payout
--   to protect the buyer of the swap in the case of a
--   qualified credit event. These terms include the
--   notional amount, the applicable credit events, the
--   reference obligation, and in the case of a CDS on
--   mortgage-backed securities, the floatingAmountEvents.
data ProtectionTerms = ProtectionTerms with
  id : Optional Text
  notionalAmount : Money
    -- ^ The notional amount of protection coverage. ISDA 2003
    --   Term: Floating Rate Payer Calculation Amount.
    deriving (Eq, Ord, Show)

-- | The primitive event to represent a change in quantity
--   or notional.
data QuantityChangePrimitive = QuantityChangePrimitive with
  after : Trade
    -- ^ The state of the trade (either an execution or a
    --   contract, as a follow-up from the event.
  before : Trade
    -- ^ The state of the trade (either an execution or a
    --   contract, before the event.
    deriving (Eq, Ord, Show)

-- | A class defining parameters associated with an
--   individual observation or fixing. This class forms
--   part of the cashflow representation of a stream.
data RateObservation = RateObservation with
  adjustedFixingDate : Optional Date
    -- ^ The adjusted fixing date, i.e. the actual date the
    --   rate is observed. The date should already be adjusted
    --   for any applicable business day convention.
  forecastRate : Optional Decimal
    -- ^ The value representing the forecast rate used to
    --   calculate the forecast future value of the accrual
    --   period.A value of 1% should be represented as 0.01.
  id : Optional Text
  observationWeight : Optional Int
    -- ^ The number of days weighting to be associated with
    --   the rate observation, i.e. the number of days such
    --   rate is in effect. This is applicable in the case of
    --   a weighted average method of calculation where more
    --   than one reset date is established for a single
    --   calculation period.
  observedRate : Optional Decimal
    -- ^ The actual observed rate before any required rate
    --   treatment is applied, e.g. before converting a rate
    --   quoted on a discount basis to an equivalent yield. An
    --   observed rate of 5% would be represented as 0.05.
  rateReference : Optional (ReferenceWithMeta RateObservation)
    -- ^ A pointer style reference to a floating rate
    --   component defined as part of a stub calculation
    --   period amount component. It is only required when it
    --   is necessary to distinguish two rate observations for
    --   the same fixing date which could occur when linear
    --   interpolation of two different rates occurs for a
    --   stub calculation period.
  resetDate : Optional Date
    -- ^ The reset date.
  treatedForecastRate : Optional Decimal
    -- ^ The value representing the forecast rate after
    --   applying rate treatment rules. A value of 1% should
    --   be represented as 0.01.
  treatedRate : Optional Decimal
    -- ^ The observed rate after any required rate treatment
    --   is applied. A treated rate of 5% would be represented
    --   as 0.05.
    deriving (Eq, Ord, Show)

-- | A class to specify the fixed interest rate, floating
--   interest rate or inflation rate.
data RateSpecification = RateSpecification with
  fixedRate : Optional Schedule
    -- ^ The fixed rate or fixed rate schedule expressed as
    --   explicit fixed rates and dates. In the case of a
    --   schedule, the step dates may be subject to adjustment
    --   in accordance with any adjustments specified in
    --   calculationPeriodDatesAdjustments.
  floatingRate : Optional FloatingRateSpecification
    -- ^ The floating interest rate specification, which
    --   includes the definition of the floating rate index.
    --   the tenor, the initial value, and, when applicable,
    --   the spread, the rounding convention, the averaging
    --   method and the negative interest rate treatment.
    deriving (Eq, Ord, Show)

-- | A class defining a date (referred to as the derived
--   date) as a relative offset from another date
--   (referred to as the anchor date). If the anchor date
--   is itself an adjustable date then the offset is
--   assumed to be calculated from the adjusted anchor
--   date. A number of different scenarios can be
--   supported, namely; 1) the derived date may simply be
--   a number of calendar periods (days, weeks, months or
--   years) preceding or following the anchor date; 2) the
--   unadjusted derived date may be a number of calendar
--   periods (days, weeks, months or years) preceding or
--   following the anchor date with the resulting
--   unadjusted derived date subject to adjustment in
--   accordance with a specified business day convention,
--   i.e. the derived date must fall on a good business
--   day; 3) the derived date may be a number of business
--   days preceding or following the anchor date. Note
--   that the businessDayConvention specifies any required
--   adjustment to the unadjusted derived date. A negative
--   or positive value in the periodMultiplier indicates
--   whether the unadjusted derived precedes or follows
--   the anchor date. The businessDayConvention should
--   contain a value NONE if the day type element contains
--   a value of Business (since specifying a negative or
--   positive business days offset would already guarantee
--   that the derived date would fall on a good business
--   day in the specified business centers).
data RelativeDateOffset = RelativeDateOffset with
  adjustedDate : Optional Date
    -- ^ The date once the adjustment has been performed.
    --   (Note that this date may change if the business
    --   center holidays change).
  businessCenters : Optional BusinessCenters
  businessCentersReference : Optional (ReferenceWithMeta BusinessCenters)
    -- ^ A pointer style reference to a set of financial
    --   business centers defined elsewhere in the document.
    --   This set of business centers is used to determine
    --   whether a particular day is a business day or not.
  businessDayConvention : BusinessDayConventionEnum
    -- ^ The convention for adjusting a date if it would
    --   otherwise fall on a day that is not a business day,
    --   as specified by an ISDA convention (e.g. Following,
    --   Precedent).
  dateRelativeTo : Optional (BasicReferenceWithMeta Date)
    -- ^ Specifies the anchor as an href attribute. The href
    --   attribute value is a pointer style reference to the
    --   element or component elsewhere in the document where
    --   the anchor date is defined.
  dayType : Optional DayTypeEnum
    -- ^ In the case of an offset specified as a number of
    --   days, this element defines whether consideration is
    --   given as to whether a day is a good business day or
    --   not. If a day type of business days is specified then
    --   non-business days are ignored when calculating the
    --   offset. The financial business centers to use for
    --   determination of business days are implied by the
    --   context in which this element is used. This element
    --   must only be included when the offset is specified as
    --   a number of days. If the offset is zero days then the
    --   dayType element should not be included.
  id : Optional Text
  period : PeriodEnum
    -- ^ A time period, e.g. a day, week, month or year of the
    --   stream. If the periodMultiplier value is 0 (zero)
    --   then period must contain the value D (day).
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2 or 3 etc. A
    --   negative value can be used when specifying an offset
    --   relative to another date, e.g. -2 days.
    deriving (Eq, Ord, Show)

-- | A class defining the parameters used to generate the
--   reset dates schedule and associated fixing dates. The
--   reset dates are the dates on which the new index
--   value (which is observed on the fixing date) is
--   applied for each period and on which the interest
--   rate hence begins to accrue.
data ResetDates = ResetDates with
  calculationPeriodDatesReference : Optional (ReferenceWithMeta CalculationPeriodDates)
    -- ^ A pointer style reference to the associated
    --   calculation period dates component defined elsewhere
    --   in the document.
  fixingDates : Optional RelativeDateOffset
    -- ^ The fixing dates are the dates on which the index
    --   values are observed. The fixing dates are specified
    --   by reference to the reset date through business days
    --   offset and an associated set of financial business
    --   centers. Normally these offset calculation rules will
    --   be those specified in the ISDA definition for the
    --   relevant floating rate index (ISDA&#39;s Floating
    --   Rate Option). However, non-standard offset
    --   calculation rules may apply for a trade if mutually
    --   agreed by the principal parties to the transaction.
  id : Optional Text
  resetDatesAdjustments : Optional BusinessDayAdjustments
    -- ^ The definition of the business day convention and
    --   financial business centers used for adjusting the
    --   reset date if it would otherwise fall on a day that
    --   is not a business day in the specified business
    --   center.
  resetFrequency : Optional ResetFrequency
    -- ^ The frequency at which the reset dates occur. In the
    --   case of a weekly reset frequency, also specifies the
    --   day of the week that the reset occurs. If the reset
    --   frequency is greater than the calculation period
    --   frequency then this implies that more than one reset
    --   is established for each calculation period and some
    --   form of rate averaging is applicable.
  resetRelativeTo : Optional ResetRelativeToEnum
    -- ^ Specifies whether the reset dates are determined with
    --   respect to each adjusted calculation period start
    --   date or adjusted calculation period end date.  If the
    --   reset frequency is specified as daily this element
    --   must not be included.
    deriving (Eq, Ord, Show)

-- | A class defining the reset frequency. In the case of
--   a weekly reset, also specifies the day of the week
--   that the reset occurs. If the reset frequency is
--   greater than the calculation period frequency the
--   this implies that more or more reset dates is
--   established for each calculation period and some form
--   of rate averaging is applicable. The specific
--   averaging method of calculation is specified in
--   FloatingRateCalculation. In case the reset frequency
--   is of value T (term), the period is defined by the
--   swap/swapStream/calculationPerioDates/effectiveDate
--   and the
--   swap/swapStream/calculationPerioDates/terminationDate.
data ResetFrequency = ResetFrequency with
  id : Optional Text
  period : PeriodExtendedEnum
    -- ^ A time period, e.g. a day, week, month, year or term
    --   of the stream.
  periodMultiplier : Int
    -- ^ A time period multiplier, e.g. 1, 2, or 3. If the
    --   period value is T (Term) then period multiplier must
    --   contain the value 1.
    deriving (Eq, Ord, Show)

-- | The primitive event to represent a reset.
data ResetPrimitive = ResetPrimitive with
  cashflow : Optional Cashflow
    -- ^ The cashflow resulting from the reset event.
  date : Date
    -- ^ The reset date
  resetValue : Decimal
    -- ^ The reset value
    deriving (Eq, Ord, Show)

-- | A class defining a schedule of rates or amounts in
--   terms of an initial value and then a series of step
--   date and value pairs. On each step date the rate or
--   amount changes to the new step value. The series of
--   step date and value pairs are optional. If not
--   specified, this implies that the initial value
--   remains unchanged over time.
data Schedule = Schedule with
  id : Optional Text
  initialValue : Decimal
    -- ^ The initial rate or amount, as the case may be. An
    --   initial rate of 5% would be represented as 0.05.
    deriving (Eq, Ord, Show)

-- | Adds an optional spread type element to the Schedule
--   to identify a long or short spread value.
data SpreadSchedule = SpreadSchedule with
  id : Optional Text
  initialValue : Decimal
    -- ^ The initial rate or amount, as the case may be. An
    --   initial rate of 5% would be represented as 0.05.
    deriving (Eq, Ord, Show)

-- | The primitive event to represent change(s) to the
--   contractual terms and the clearing submission and
--   acceptance process.
data TermsChangePrimitive = TermsChangePrimitive with
  after : Trade
  before : Trade
    deriving (Eq, Ord, Show)

-- | The time alongside with the timezone location
--   information. This class makes use of the FpML
--   TimezoneLocation construct.
data TimeZone = TimeZone with
  location : Optional (FieldWithMeta Text)
    -- ^ FpML specifies the timezoneLocationScheme by
    --   reference to the Time Zone Database (a.k.a. tz
    --   database) maintained by IANA, the Internet Assigned
    --   Numbers Authority.
  time : Text
    -- ^ The observation time.
    deriving (Eq, Ord, Show)

-- | A class to represent the general trade concept, which
--   can either be an execution or a contract. The
--   execution consists essentially in the economic terms
--   which are agreed between the parties. The contract
--   will further qualify those with the legal entities
--   (think of the allocation case, which execution state
--   can involve the investment adviser rather not the
--   actual funds) while not specify the master agreement
--   or collateral terms which might be associated with
--   the subsequent contract.
data Trade = Trade with
  contract : Optional Contract
    -- ^ The contract differs from the execution by the fact
    --   that its legal terms are fully specified. This
    --   includes the legal entities that are associated to it
    --   as well as any associated legal agreement, e.g.
    --   master agreement, credit and collateral terms, ...
  execution : Optional Execution
    -- ^ The execution corresponds to economic terms that are
    --   agreed between parties, but which legal terms are not
    --   yet specified. The execution attribute applies to the
    --   post-execution scenario of a product that is subject
    --   to the clearing mandate and is then routed to the CCP
    --   as an execution.
    deriving (Eq, Ord, Show)

-- | A class to specify the contract&#39;s trade date
--   alongside an identifier.
data TradeDate = TradeDate with
  date : Date
    -- ^ The trade date associated with the contract. In the
    --   case of a novated trade, this date corresponds to the
    --   novation date.
  id : Optional Text
    deriving (Eq, Ord, Show)

data TransferBase = TransferBase with
  identifier : Optional (FieldWithMeta Text)
    -- ^ The identifier that can be associated with each of
    --   the transfer components
  transferCalculation : Optional TransferCalculation
    -- ^ The calculation details underlying the transfer
    --   amount, when applicable.
    deriving (Eq, Ord, Show)

data TransferBreakdown = TransferBreakdown with
  identifier : Optional (FieldWithMeta Text)
    -- ^ The identifier that can be associated with each of
    --   the transfer components
  lineage : [Lineage]
    -- ^ The lineage into the transfer components that might
    --   be associated with each of the transfer components.
  transferCalculation : Optional TransferCalculation
    -- ^ The calculation details underlying the transfer
    --   amount, when applicable.
    deriving (Eq, Ord, Show)

data TransferCalculation = TransferCalculation with
  calculationOutcome : Optional Text
    -- ^ This is a conceptual placeholder for providing the
    --   breakdown into the cashflow calculation components,
    --   leveraging the fact that the CDM provides calculation
    --   components, starting with the FixedAmount and the
    --   FloatingAmount. Further evaluation of expected usage
    --   needs to take place to confirm and prioritize such
    --   implementation.
  lineage : [Lineage]
    -- ^ The lineage into the components used for the
    --   calculation.
    deriving (Eq, Ord, Show)

-- | A class to specify the transfer of assets between
--   parties, those assets being either cash, securities
--   or physical assets. This class combines components
--   that are cross-assets (settlement date, settlement
--   type, status, ...) and some other which are
--   specialized by asset class (e.g. the payer/receiver
--   amount and cashflow type for a cash transfer, the
--   transferor/transferee, security indication, quantity,
--   and asset transfer type qualification for the case of
--   a security). The associated rosettaKey denotes the
--   ability to associate a hash value to the respective
--   Execution instantiations for the purpose of model
--   cross-referencing, in support of functionality such
--   as the event effect and the lineage.
data TransferPrimitive = TransferPrimitive with
  cashTransfer : [CashTransferComponent]
    -- ^ The cash transfer component of the transfer. In the
    --   case where several currencies are involved in the
    --   transfer, several components should be used, as the
    --   component supports one single currency amount.
  identifier : Optional (FieldWithMeta Text)
    -- ^ The identifier which might be associated with the
    --   transfer.
  rosettaKey : Text
  settlementDate : AdjustableOrAdjustedOrRelativeDate
  settlementReference : Optional Text
    -- ^ The settlement reference, when applicable.
  settlementType : Optional TransferSettlementEnum
    -- ^ The qualification as to how the transfer will settle,
    --   e.g. a DvP settlement.
  status : Optional TransferStatusEnum
    -- ^ The transfer status, e.g. Instructed, Settled, ...
    deriving (Eq, Ord, Show)
